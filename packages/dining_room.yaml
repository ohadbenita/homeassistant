---
automation:
  - alias: 'Close dining room shutters before sunset'
    id: dining_room_shutters_close_before_sunset
    initial_state: true
    trigger:
      - platform: sun
        event: sunset
        offset: "-03:00:00"

    action:
      - variables:
          right_window_position: "{{ state_attr('cover.dining_room_right_window', 'current_position') }}"
          left_window_position: "{{ state_attr('cover.dining_room_left_window', 'current_position') }}"
          main_window_position: "{{ state_attr('cover.dining_room_main_window', 'current_position') }}"

      - action: cover.set_cover_position
        target:
          entity_id:
            - cover.dining_room_right_window
        data:
          position: "{{ [right_window_position, 35] | min }}"

      - action: cover.set_cover_position
        target:
          entity_id:
            - cover.dining_room_left_window
        data:
          position: "{{ [left_window_position, 35] | min }}"

      - choose:
          - conditions:
              - condition: state
                entity_id:
                  - binary_sensor.dining_room_main_window_01_contact
                  - binary_sensor.dining_room_main_window_02_contact
                state: 'off'
            sequence:
              - action: cover.set_cover_position
                target:
                  entity_id: cover.dining_room_main_window
                data:
                  position: "{{ [main_window_position, 35] | min }}"
        default:
          - action: script.activate_alexa_actionable_notification
            data:
              text: 'I see the balcony window is open, should I close its shutter?'
              event_id: 'actionable_notification_close_balcony_window'
              alexa_device: 'media_player.kitchen_echo'


  - alias: 'Announce dining room main shutter will not be closed'
    id: dining_room_main_window_shutter_close_skipped
    initial_state: true
    trigger:
      - platform: event
        event_type: alexa_actionable_notification
        event_data:
          event_id: actionable_notification_close_balcony_window
          event_response_type: ResponseNo
      - platform: event
        event_type: alexa_actionable_notification
        event_data:
          event_id: actionable_notification_close_balcony_window
          event_response_type: ResponseNone

    action:
      - action: notify.alexa_media
        data_template:
          data:
            type: tts
          target:
            - media_player.kitchen_echo
          message: >-
            I understand - I'll skip closing the balcony window shutter.


  - alias: 'Close dining room main shutter via actionable notification'
    id: dining_room_main_window_shutter_close_actionable_notification
    initial_state: true
    trigger:
      - platform: event
        event_type: alexa_actionable_notification
        event_data:
          event_id: actionable_notification_close_balcony_window
          event_response_type: ResponseYes

    action:
      - action: notify.alexa_media
        data_template:
          data:
            type: tts
          target:
            - media_player.kitchen_echo
          message: >-
            Please close the window for me to be able to close the shutter.

      - wait_template: >
          {{ is_state('binary_sensor.dining_room_main_window_01_contact', 'off')
            and is_state('binary_sensor.dining_room_main_window_02_contact', 'off') }}
        timeout:
          minutes: 2
        continue_on_timeout: false

      - action: cover.set_cover_position
        target:
          entity_id:
            - cover.dining_room_main_window
        data:
          position: "{{ [state_attr('cover.dining_room_main_window', 'current_position'), 15] | min }}"


  - alias: 'Close dining room shutters at night'
    id: dining_room_shutters_close_night
    initial_state: true
    trigger:
      - platform: time
        at: '21:00:00'

    condition:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'

    action:
      - choose:
          - conditions:
              - condition: state
                entity_id:
                  - binary_sensor.dining_room_main_window_01_contact
                  - binary_sensor.dining_room_main_window_02_contact
                state: 'off'
            sequence:
              - action: cover.set_cover_position
                target:
                  entity_id:
                    - cover.dining_room_right_window
                    - cover.dining_room_main_window
                    - cover.dining_room_left_window
                data:
                  position: 15
        default:
          - action: script.activate_alexa_actionable_notification
            data:
              text: 'I see the balcony window is open, should I close its shutter?'
              event_id: 'actionable_notification_close_balcony_window'
              alexa_device: 'media_player.kitchen_echo'


  - alias: 'Close dining room shutters at night - complete'
    id: dining_room_shutters_close_night_complete
    initial_state: true
    trigger:
      - platform: time
        at: '00:00:00'

    condition:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'

    action:
      - action: cover.set_cover_position
        target:
          entity_id:
            - cover.dining_room_right_window
            - cover.dining_room_main_window
            - cover.dining_room_left_window
        data:
          position: 0


  - alias: 'Open dining room shutters in the morning'
    id: dining_room_open_shutters_morning
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.entrance_to_living_room_01_occupancy
        from: 'off'
        to: 'on'

    condition:
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {{ as_timestamp(now()) - as_timestamp(state_attr('automation.open_dining_room_shutters_in_the_morning', 'last_triggered') or today_at('00:00')) | int > 7200 }}
        - condition: time
          after: '06:30:00'
          before: '10:00:00'
        - condition: state
          entity_id: input_boolean.away_mode
          state: 'off'

    action:
      - action: cover.set_cover_position
        data_template:
          entity_id: cover.dining_room_main_window
          position: >-
            {{ max(state_attr('cover.dining_room_main_window', 'current_position') | int, 100) }}

      - action: cover.set_cover_position
        data_template:
          entity_id: cover.dining_room_right_window
          position: >-
            {{ max(state_attr('cover.dining_room_right_window', 'current_position') | int, 70) }}

      - action: cover.set_cover_position
        data_template:
          entity_id: cover.dining_room_left_window
          position: >-
            {{ max(state_attr('cover.dining_room_left_window', 'current_position') | int, 70) }}

  # maps:
  #   - flag: 0
  #     name: Main floor
  #     rooms:
  #       "16": Living room
  #       "17": Living room1
  #       "18": Kitchen
  #       "19": Study
  #       "20": Corridor
  #       "21": Corridor1
  #       "22": Guest bedroom
  #       "23": Dining room1
  #       "24": Hall
  #       "25": Living room2


  - alias: Kitchen counter button - Send Yulanda to clean the dining room
    id: dining_room_clean_yulanda_button_press
    initial_state: false
    trigger:
      - platform: state
        entity_id: sensor.kitchen_counter_01_action
        to: 'double'

    action:
      - action: vacuum.send_command
        data:
          command: app_segment_clean
          params:
            - segments:
                - 23
              repeat: 2
        target:
          entity_id: vacuum.yulanda

      - action: notify.alexa_media
        data_template:
          data:
            type: tts
          target:
            - media_player.kitchen_echo
          message: >-
            I just sent Yulanda to clean the dining room


  - alias: Kitchen counter button - Dock Yulanda
    id: dining_room_kitchen_counter_button_dock_yulanda
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.kitchen_counter_01_action
        to: 'single'

    action:
      - action: vacuum.return_to_base
        target:
          entity_id: vacuum.yulanda
